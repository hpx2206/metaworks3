package org.metaworks;

import java.util.Date;

import org.metaworks.ObjectInstance;
import org.metaworks.ObjectType;
import org.metaworks.dao.AbstractGenericDAO;
import org.metaworks.dao.Database;
import org.metaworks.dao.IDAO;
import org.metaworks.dwr.MetaworksRemoteService;

public class MetaworksObject<T extends IDAO> implements IDAO{
	
	MetaworksContext metaworksContext;
		public MetaworksContext getMetaworksContext() {
			if(metaworksContext==null)
				metaworksContext = new MetaworksContext();
			
			return metaworksContext;
		}
		public void setMetaworksContext(MetaworksContext context) {
			this.metaworksContext = context;
		}

	public T databaseMe() throws Exception{
		Object keyValue = createKeyObject();
		
		return (T) Database.get(getClass(), keyValue, this);
	}
	
	public void flushDatabaseMe() throws Exception{
		Database.flush(getClass(), createKeyObject());
	}
	
	public T createDatabaseMe() throws Exception{
		
		return (T) Database.create(createKeyObject(), this);
	}
	
	public void syncToDatabaseMe() throws Exception{
		IDAO databaseMe = databaseMe();
		
		WebObjectType wot = MetaworksRemoteService.getMetaworksType(databaseMe.getImplementationObject().getDaoClass().getName());
		
		ObjectInstance objInst = (ObjectInstance) wot.metaworks2Type.createInstance();
		objInst.setObject(this);
		
		ObjectInstance databaseObjInst = (ObjectInstance) wot.metaworks2Type.createInstance();
		databaseObjInst.setObject(databaseMe);

		for(int i=0; i<wot.metaworks2Type().getFieldDescriptors().length; i++){
			FieldDescriptor fd = wot.metaworks2Type().getFieldDescriptors()[i];
			
			if(fd.isSavable())
				databaseObjInst.setFieldValue(fd.getName(), objInst.getFieldValue(fd.getName()));
		}
	}
	
	public void deleteDatabaseMe() throws Exception{
		WebObjectType wot = MetaworksRemoteService.getMetaworksType(getClass().getName());
		ObjectType ot = (ObjectType) wot.metaworks2Type();
		ObjectInstance oi = (ObjectInstance) ot.createInstance();
		
		oi.setObject(this);
		
		if(wot.getKeyFieldDescriptor()==null)
			throw new Exception("[WARN] Even though domain class '" + wot.metaworks2Type.getName() + "' is a database synchronizable object, it has no key field description. Give @org.metaworks.Id for the key field's GETTER[!] method NOT the SETTER.");

		Object keyValue = oi.getFieldValue(wot.metaworks2Type().getKeyFieldDescriptor().getName());

		//TODO: where clause should be generated by the referencing Object connections 
		IDAO forDelete =  Database.sql(IDAO.class, "delete from "+ot.getName()+" where "+wot.getKeyFieldDescriptor().getName()+" = ?" + wot.getKeyFieldDescriptor().getName());
		forDelete.set(wot.getKeyFieldDescriptor().getName(), keyValue);
		int i=forDelete.update();

		if(i<1) throw new Exception("No data to delete!");
	}

	protected Object createKeyObject() throws Exception {
		WebObjectType wot = MetaworksRemoteService.getMetaworksType(getClass().getName());
		ObjectType ot = (ObjectType) wot.metaworks2Type();
		ObjectInstance oi = (ObjectInstance) ot.createInstance();
		
		oi.setObject(this);
		
		if(wot.getKeyFieldDescriptor()==null)
			throw new Exception("[WARN] Even though domain class '" + wot.metaworks2Type.getName() + "' is a database synchronizable object, it has no key field description. Give @org.metaworks.Id for the key field's GETTER[!] method NOT the SETTER.");
		Object keyValue = oi.getFieldValue(wot.metaworks2Type().getKeyFieldDescriptor().getName());

		if(keyValue == null)
			throw new Exception("Even though domain class '" + wot.metaworks2Type.getName() + "' is a database synchronizable object, it has no key value.");

		
		return keyValue;
	}

//	
//	public void sync() throws Exception{
//		getDatabaseMe()
//	}
	
	/////////////////// stubs. don't care ///////////////////

	@Override
	public void select() throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int insert() throws Exception {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int update() throws Exception {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int update(String stmt) throws Exception {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int call() throws Exception {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void addBatch() throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int[] updateBatch() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void beforeFirst() throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean previous() throws Exception {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean next() throws Exception {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean first() throws Exception {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void afterLast() throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean last() throws Exception {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean absolute(int pos) throws Exception {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Object get(String key) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object set(String key, Object value) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getString(String key) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Integer getInt(String key) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Long getLong(String key) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Boolean getBoolean(String key) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Date getDate(String key) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public AbstractGenericDAO getImplementationObject() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void releaseResource() throws Exception {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void moveToInsertRow() throws Exception {
		// TODO Auto-generated method stub
		
	}

}
